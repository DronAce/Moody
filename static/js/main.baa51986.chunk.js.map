{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","Reducer.js","Login.js","SidebarChat.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","className","Avatar","Date","length","timestamp","toDate","toUTCString","IconButton","SearchOutlined","AttachFile","MoreVert","message","displayName","onChange","e","target","type","placeholder","onClick","preventDefault","add","FieldValue","serverTimestamp","actionTypes","state","action","console","log","Login","dispatch","src","alt","Button","signInWithPopup","then","result","catch","err","alert","SidebarChat","addNewChat","id","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa51986.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA3nYabVjc4fTbO0C0OBRqltkJkrhDwIdk\",\n    authDomain: \"moody-bfd57.firebaseapp.com\",\n    projectId: \"moody-bfd57\",\n    storageBucket: \"moody-bfd57.appspot.com\",\n    messagingSenderId: \"837399005684\",\n    appId: \"1:837399005684:web:7964a82d178e921810d1a1\",\n    measurementId: \"G-01KFT1FFBC\"\n  };\n\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export { auth, provider};\n  export default db;","import React, {createContext, useContext, useReducer} from 'react'\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({reducer, initialState, children }) => \n(\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n\n","import React, { useState, useEffect } from 'react'\nimport './Chat.css'\nimport {Avatar, IconButton} from '@material-ui/core'\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons'\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from \"react-router-dom\";\nimport db from './firebase';\nimport firebase from 'firebase';\nimport {useStateValue} from \"./StateProvider\";\n\nfunction Chat() {\n    \n    const [input, setInput] = useState(\"\")\n    const { roomId } = useParams()\n    const [roomName, setRoomName] = useState(\"\")\n    const [messages, setMessages] = useState([])\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(()=>{\n        if(roomId){\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\n                setRoomName(snapshot.data().name);\n            });\n\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            });\n\n        }\n    },[roomId])\n\n    const sendMessage = (e) => {\n        //POST fetch request to send message\n        e.preventDefault();\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput(\"\");\n    }\n\n\n    return (\n        <div className='chat'>\n            <div className='chat__header'>\n                {/* Other User's Pic Here */}\n                <Avatar />\n                <div className='chat__headerInfo'>\n                    <h3 className='chat-room-name'>{roomName}</h3>\n                    <p className='chat-room-last-seen'>\n                        Last seen {\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.\n                            timestamp?.toDate()\n                        ).toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined/>\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert/>\n                    </IconButton>\n                    \n                </div>\n            </div>\n            <div className='chat__body'>\n                {messages.map(message => (\n                    <p className={`chat__message ${ message.name == user.displayName && 'chat__receiver'}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\n                    </p>\n                ))}\n            </div>\n            <div className='chat__footer'>\n                <InsertEmoticonIcon />\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\n                    <button type=\"submit\" onClick={sendMessage}> Send</button>\n                </form>\n                <MicIcon/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Chat;\n","export const initialState = {\n    user: null,\n}\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n}\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n            ...state,\n        user: action.user,\n    };\n\n    default:\n        return state;\n    }\n};\n\nexport default reducer;","import React from 'react'\nimport { Button } from \"@material-ui/core\";\nimport \"./Login.css\"\nimport { auth, provider } from './firebase';\nimport {actionTypes} from './Reducer'\nimport { useStateValue } from './StateProvider';\n\nfunction Login() {\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth\n        .signInWithPopup(provider)\n        .then((result) => {\n            dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user,\n            })\n        })\n        .catch((err) => alert(err.message))\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://i.pinimg.com/originals/90/22/c3/9022c3da331305796ded3dda4c619df0.png\" \n                alt=\"Moody\"\n                />\n                \n                <div className=\"login__text\">\n                    <h1>Sign in to Moody</h1>\n                </div>\n                \n                <Button onClick={signIn}>\n                    Sign In With Google\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, {useEffect, useState} from 'react';\nimport './SidebarChat.css'\nimport {Avatar} from '@material-ui/core'\nimport db from \"./firebase\"\nimport { Link } from \"react-router-dom\";\n\nfunction SidebarChat({ addNewChat, id, name }) {\n    const [messages, setMessages] = useState(\"\");\n    \n    useEffect(() => {\n        if(id){\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            })\n        }\n    }, [id]);\n    \n    \n    \n    const createChat = () => {\n        const roomName = prompt(\"Please Enter Name for Chat\");\n\n        if(roomName){\n            db.collection(\"rooms\").add({\n                name: roomName\n            })\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`} key={id}>\n            <div className=\"sidebarChat\">\n                <Avatar /* src={user.image} */ />\n                <div className=\"sidebarChat__info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n    ) : (\n        <div onClick={createChat} className=\"sidebarChat\">\n            <h2 >Add New Chat</h2>\n        </div>\n    )\n}\n\n\nexport default SidebarChat\n\n","import React, { useState, useEffect} from 'react';\nimport {Avatar, IconButton} from '@material-ui/core'\nimport {SearchOutlined} from '@material-ui/icons'\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SidebarChat from './SidebarChat'\nimport db from \"./firebase\"; \nimport { useStateValue } from './StateProvider';\n\n\nimport './Sidebar.css'\n\n\nfunction Sidebar() {\n\n    const [rooms, setRooms] = useState([])\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        ///Fetch for all rooms here\n\n        const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\n        setRooms(\n            snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        ))\n\n        return () => {\n            unsubscribe();\n        }\n        \n    }, [])\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL}/>\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                    \n                </div>\n            </div>\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <SearchOutlined />\n                    <input type=\"text\" placeholder=\"Search or start new chat\"/>\n                </div>\n            </div>\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat/>\n                {rooms.map(room=> (\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport Chat from './Chat'\nimport Login from './Login'\nimport Sidebar from './Sidebar'\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {useStateValue} from \"./StateProvider\"\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n        {!user ? (\n          <Login />\n        ): (\n          <div className=\"app__body\">  \n            <Router>\n              <Sidebar />\n              <Switch>\n              \n                <Route path=\"/rooms/:roomId\">\n                  <Chat />\n                </Route>\n\n                <Route path=\"/\">\n                  <Chat /> \n                </Route>\n\n              </Switch>\n\n            </Router>\n          </div>\n        )}\n        \n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from './Reducer'\nimport {StateProvider} from './StateProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}